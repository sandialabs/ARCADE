TYPE
  LOGLEVEL : (CRITICAL, WARNING, INFO, DEBUG) := INFO;
END_TYPE

FUNCTION_BLOCK LOGGER
  VAR_INPUT
    TRIG : BOOL;
    MSG : STRING;
    LEVEL : LOGLEVEL := INFO;
  END_VAR
  VAR
    TRIG0 : BOOL;
  END_VAR

  IF TRIG AND NOT TRIG0 THEN
  {{
   LogMessage(GetFbVar(LEVEL),(char*)GetFbVar(MSG, .body),GetFbVar(MSG, .len));
  }}
  END_IF;
  TRIG0:=TRIG;
END_FUNCTION_BLOCK



FUNCTION_BLOCK python_eval
  VAR_INPUT
    TRIG : BOOL;
    CODE : STRING;
  END_VAR
  VAR_OUTPUT
    ACK : BOOL;
    RESULT : STRING;
  END_VAR
  VAR
    STATE : DWORD;
    BUFFER : STRING;
    PREBUFFER : STRING;
    TRIGM1 : BOOL;
    TRIGGED : BOOL;
  END_VAR

  {extern void __PythonEvalFB(int, PYTHON_EVAL*);__PythonEvalFB(0, data__);}
END_FUNCTION_BLOCK

FUNCTION_BLOCK python_poll
  VAR_INPUT
    TRIG : BOOL;
    CODE : STRING;
  END_VAR
  VAR_OUTPUT
    ACK : BOOL;
    RESULT : STRING;
  END_VAR
  VAR
    STATE : DWORD;
    BUFFER : STRING;
    PREBUFFER : STRING;
    TRIGM1 : BOOL;
    TRIGGED : BOOL;
  END_VAR

  {extern void __PythonEvalFB(int, PYTHON_EVAL*);__PythonEvalFB(1,(PYTHON_EVAL*)(void*)data__);}
END_FUNCTION_BLOCK

FUNCTION_BLOCK python_gear
  VAR_INPUT
    N : UINT;
    TRIG : BOOL;
    CODE : STRING;
  END_VAR
  VAR_OUTPUT
    ACK : BOOL;
    RESULT : STRING;
  END_VAR
  VAR
    py_eval : python_eval;
    COUNTER : UINT;
    _TMP_ADD10_OUT : UINT;
    _TMP_EQ13_OUT : BOOL;
    _TMP_SEL15_OUT : UINT;
    _TMP_AND7_OUT : BOOL;
  END_VAR

  _TMP_ADD10_OUT := ADD(COUNTER, 1);
  _TMP_EQ13_OUT := EQ(N, _TMP_ADD10_OUT);
  _TMP_SEL15_OUT := SEL(_TMP_EQ13_OUT, _TMP_ADD10_OUT, 0);
  COUNTER := _TMP_SEL15_OUT;
  _TMP_AND7_OUT := AND(_TMP_EQ13_OUT, TRIG);
  py_eval(TRIG := _TMP_AND7_OUT, CODE := CODE);
  ACK := py_eval.ACK;
  RESULT := py_eval.RESULT;
END_FUNCTION_BLOCK


PROGRAM RCP_PLC
  VAR
    TIME_IN : REAL;
    TIME_OUT : REAL;
    RCP_FLOW : REAL;
    RCP_PUMP_SPEED : REAL;
    MANIPIO_CONTROL : REAL := 0.0;
    KPI : REAL := 0.001;
    Ti : REAL := 30.0;
    SET_POINT : REAL := 8801.4;
    INIT : REAL := 90.0;
  END_VAR
  VAR
    INTEGRAL0 : INTEGRAL;
    TON0 : TON;
    _TMP_GT39_OUT : BOOL;
    _TMP_EQ24_OUT : BOOL;
    _TMP_SUB27_OUT : REAL;
    _TMP_MUL7_OUT : REAL;
    _TMP_EQ30_OUT : BOOL;
    _TMP_EQ21_OUT : BOOL;
    _TMP_DIV9_OUT : REAL;
    _TMP_MUL12_OUT : REAL;
    _TMP_SEL6_OUT : REAL;
    _TMP_ADD14_OUT : REAL;
    _TMP_LIMIT18_OUT : REAL;
    _TMP_SEL23_OUT : REAL;
    _TMP_SEL33_OUT : REAL;
  END_VAR

  TIME_OUT := TIME_IN;
  _TMP_GT39_OUT := GT(TIME_IN, 1.0);
  TON0(IN := _TMP_GT39_OUT, PT := T#60s);
  _TMP_EQ24_OUT := EQ(MANIPIO_CONTROL, 1.0);
  _TMP_SUB27_OUT := SUB(SET_POINT, RCP_FLOW);
  _TMP_MUL7_OUT := MUL(_TMP_SUB27_OUT, KPI);
  _TMP_EQ30_OUT := EQ(TIME_IN, 0.0);
  _TMP_EQ21_OUT := EQ(_TMP_LIMIT18_OUT, _TMP_ADD14_OUT);
  _TMP_DIV9_OUT := DIV(1.0, Ti);
  _TMP_MUL12_OUT := MUL(_TMP_MUL7_OUT, _TMP_DIV9_OUT);
  _TMP_SEL6_OUT := SEL(_TMP_EQ21_OUT, 0.0, _TMP_MUL12_OUT);
  INTEGRAL0(RUN := 1, R1 := _TMP_EQ30_OUT, XIN := _TMP_SEL6_OUT, X0 := INIT, CYCLE := T#100ms);
  _TMP_ADD14_OUT := ADD(_TMP_MUL7_OUT, INTEGRAL0.XOUT);
  _TMP_LIMIT18_OUT := LIMIT(0.0, _TMP_ADD14_OUT, 120.0);
  _TMP_SEL23_OUT := SEL(_TMP_EQ24_OUT, _TMP_LIMIT18_OUT, RCP_PUMP_SPEED);
  _TMP_SEL33_OUT := SEL(TON0.Q, _TMP_SEL23_OUT, 5.0);
  RCP_PUMP_SPEED := _TMP_SEL33_OUT;
END_PROGRAM


CONFIGURATION Config0

  RESOURCE Res0 ON PLC
    TASK task0(INTERVAL := T#100ms,PRIORITY := 0);
    PROGRAM instance0 WITH task0 : RCP_PLC;
  END_RESOURCE
END_CONFIGURATION
